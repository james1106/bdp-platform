#这两个属性在启动配置中是必须要有的
spring.application.name=bdp-datasource
server.port=8085

debug=true

#服务注册中心的地址
eureka.client.service-url.defaultZone=http://localhost:8081/eureka

#使用IP地址的形式注册服务,不使用主机名来定义注册中心的地址，
#否则自动获取除环路IP外的第一个IP地址
eureka.instance.prefer-ip-address=true

#定制在eureka注册中的实例ID，版本(1.5.10)支持 spring.cloud.client.ipAddress,spring.cloud.client.hostname等
#如果用Sprng boot 2.0+时spring.cloud.client.ipAddress要改为spring.cloud.client.ipaddress,注意A小写了。
#在测试最新版本时被坑了,应该是基于命名统一的考虑，在配置中尽量不用驼峰命名法。
eureka.instance.instance-id=${spring.cloud.client.ipaddress}:${server.port}
    
#定制在eureka注册中的鼠标点击实例ID后链接的地址
eureka.instance.status-page-url=http://${spring.cloud.client.ipaddress}:${server.port}/info

#用在什么地方？
eureka.instance.home-page-url=http://${spring.cloud.client.ipaddress}:${server.port}

#很有用，做为一些元数据可用来做管理
eureka.instance.metadata-map.name=Jack
eureka.instance.metadata-map.sex=Man

#设置livereload服务监听端口，默认为35729
spring.devtools.livereload.port=38085

#第一种读取服务的方式
#指定使用的配置文件为dev后缀的
#spring.cloud.config.profile=dev
#指定配置服务地址
#spring.cloud.config.uri= http://localhost:8082/
###############################################

#第二种读取服务的方式,推荐使用第二种方式
#通过指定配置服务的服务ID来从eureka来获取配置服务的地址，以此来实现配置服务的高可用。
spring.cloud.config.profile=dev
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=bdp-config
###############################################

#zipkin地址配置
#spring.zipkin.base-url=http://localhost:8083
#spring.sleuth.sampler.probability=1