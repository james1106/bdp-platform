spring.application.name=bdp-metadata
server.port=8086

#这块如果设置了该属性，如：/metadata。那么再使用Feign调用服务时候需要写成如下形式。
#@FeignClient(name="bdp-metadata/metadata").似乎又是一个大水坑.
#从这里可以看出spring cloud的一个设计原则，即最做为微服务启动的最好不要再设置server.servlet.context-path这个值。
#设置也是没有太多意见的，一个通过JAR方式启动的微服务不可能在同一个IP，相同端口上有多个服务实例。所以最好不配置这个参数。
#不要纠结，否则坑很多，要配置的地方也很多，比如还有turbine服务也会有影响。直接使用默认的最好。
#server.servlet.context-path=/metadata

#使用IP注册服务
eureka.instance.prefer-ip-address=true

#定制在eureka注册中的实例ID，当前版本支持 spring.cloud.client.ipaddress,spring.cloud.client.hostname
#以前版本的spring.cloud.client.ipaddress要改为spring.cloud.client.ipAddress,注意A大写了。这是一个大水坑。
eureka.instance.instance-id=${spring.cloud.client.ipaddress}:${server.port}

#定制在eureka注册中的鼠标点击实例ID后链接的地址
eureka.instance.status-page-url=http://${spring.cloud.client.ipaddress}:${server.port}$/info

#这个值不好理解，目前没搞明白哪里有用到
#eureka.instance.home-page-url-path=/metadata

#服务注册中心的地址
eureka.client.service-url.defaultZone=http://localhost:8081/eureka

#很重要，开启hystrix功能，开启才很使用用feignclient的fallback功能
#参数FeignClientsConfiguration代码,以前这个属性是默认开启的。
feign.hystrix.enabled=true

#以debug模式启动，即会输出某些DEBUG级别的日志信息。
#从这些日志中可以看到Spring自动配置了哪些bean及未自动配置的bean是因为缺少了哪些条件
#对于每个自动配置，可以看到它启动或失败的原因
debug=true

#根日志输出级别为WARN，注意这个设置与debug=true的设置不冲突。
#这个设置只定义根日志的输出级别，其它非根日志如果没有特别指定也用这个设置的输出级别。
#debug=true只是特别设置了某些日志的输出级别为DEBUG
logging.level.root=WARN

#指定一个相对于当前位置的目录来存放日志文件,如果在windows下不能有/前缀，
#linux系统暂未测试，这块需要注意。生成的日志文件以spring.log命名
logging.path=logs
#指定生成的日志文件名称，存放在当前目录下。
#注意logging.file与logging.path不能组件使用.同时配置以logging.file配置为主
#logging.file=bdp-metadata.log

#日志文件的滚动策略是文件大小及时间的，分别通过以下两属性设置，
#可在org/springframework/boot/logging/logback/base.xml里看到默认的配置信息。
#每个日志文件的大小，当大于这个值时会压缩，压缩格式如：bdp-metadata.log.2018-03-09.0.gz
logging.file.max-size=2mb
#日志文件保留历史天数，如果超过了会删除最先生成的文件，
#官方文件说这个属性是指最大归档文档数(Maximum number of archive log files to keep.)
#经过测试这个值实际是指保存的日志的历史天数
logging.file.max-history=3

#这里根据需要定义日志输出格式信息
#logging.pattern.file=xxxx

#精确控制某个包，某个类下的日志。因数一般创建日志时以类全名为日志记录器名称。
#所以可以通过包名或者类全名来精确控件日志的显示级别
#如果不具体设置日志输出级别就以root设置的级别输出
#logging.level.com.bdp.metadata=WARN
logging.level.com.bdp.metadata.controller=ERROR
logging.level.com.bdp.metadata.fallback=INFO

#关闭某个包或者类的日志，注意，如果在yml中OFF是关键字，需要前后加单引号
#logging.level.com.bdp.metadata=OFF

spring.devtools.livereload.port=38086


