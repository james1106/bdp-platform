spring:
  application:
    name: bdp-gateway
  cloud:
    loadbalancer:
      retry:
        enabled: true
server:
  port: 80
logging:
  level:
    com.netflix: debug
    org.springframework.retry: debug
eureka:
  instance:
    instance-id: ${spring.cloud.client.ipaddress}:${server.port}
    status-page-url: http://${spring.cloud.client.ipaddress}:${server.port}/info
  client:
    serviceUrl:
      defaultZone: http://localhost:8081/eureka
zuul:
  sensitiveHeaders:
  remark-sensitiveHeaders: 这个很重要,不取值表示把所有的请求头信息都传递给下游应用。这样才好实现权限管理
  add-host-header: true
  remark-add-host-header: 解决被代理程序spring mvc redirect问题
  security:
    disabled: true
  ignoredServices: '*'
  remark: ignoredServices用来配置不默认代理哪些服务请求，*表示所有的服务默认都不代理。zuul默认是代理所有eureka注册的所有服务
  routes:
    api-a:
      path: /datasource/**
      prefix: datasource
      serviceId: bdp-datasource
    api-b:
      path: /config/**
      serviceId: bdp-config
    api-c:
      path: /dps/**
      serviceId: dps
      prefix: dps
      stripPrefix: false
      retryable: true
  tokenfilter:
    remark: 通过自定义配置演示是否启用指定的过滤器
    enabled: false
  retryable: true
ribbon:
  remark1: 失败后在当前服务上重试的次数
  MaxAutoRetries: 0
  remark2: 失败后切换其它相同服务的次数
  MaxAutoRetriesNextServer: 1
dps:
  ribbon:
    remark1: NIWSServerListClassName很重要，这个属性设置了服务列表的提供方式，如果不设置会默认使系统注册的，即使用DiscoveryEnabledNIWSServerList，从eureka获取服务列表。注意参考ribbon文档。
    remark2: 同时对于不同的ribbon客户端可以设置不同的NIWSServerListClassName可知对于每个RibbonClient，Spring都会生成子容器，以实现隔离，这里也要理解一下Spring父子容器的概念。如果通过编写配置属性注意
    remark3: 配置类的包路径不要被父容器扫描到，既不要放在与@SpringBootApplication标注的主类同一包或子包下面。这一点在Spring文档有有说明强调。要特别注意
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: 127.0.0.1:8080